"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),CanvasSequence=function(){function e(t,n,i,s,a){_classCallCheck(this,e),this.sequence=[],this.canvas=document.getElementById(t),this.context=this.canvas.getContext("2d"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.sequencePath=n,this.sequenceLength=i,this.fileType=s||".png",this.scrollHeight=document.body.scrollHeight,this.scrollOffset=document.body.scrollTop,this.clientHeight=window.innerHeight,this.loadCallback=a||function(){},this.loadSequence()}return _createClass(e,[{key:"addLeadingZeros",value:function(e){for(var t=this.sequenceLength.toString().length,n=(e>0?e:-e)+"",i="",s=t-n.length;s>0;s--)i+="0";return i+=n,e>=0?i:"-"+i}},{key:"loadSequence",value:function(){for(var e=this,t=0;t<this.sequenceLength;t++){var n=this.addLeadingZeros(t),i=this.sequencePath+n+this.fileType,s=new Image;s.src=i,s.onload=function(){e.loadedCounter++,e.loadedCounter===e.sequenceLength&&(e.loadCallback(),e.renderFrame())},this.sequence.push(s)}}},{key:"getNextFrameNumber",value:function(){var e=this.scrollOffset/(this.scrollHeight-this.clientHeight)*100,t=Math.round(e*this.sequenceLength/100);return t}},{key:"syncScrollPosition",value:function(){this.scrollOffset=document.body.scrollTop}},{key:"drawImage",value:function(e){e>=0&&e<this.sequence.length&&(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.sequence[e].complete?this.context.drawImage(this.sequence[e],0,0,this.canvas.width,this.canvas.height):console.log("The current frame has not been loaded. Please ensure all images are loaded before updating the canvas."))}},{key:"renderFrame",value:function(){var e=this;this.syncScrollPosition(),requestAnimationFrame(function(){e.renderFrame()}),this.previousFrame=this.currentFrame,this.currentFrame=this.getNextFrameNumber(),(this.currentFrame!=this.previousFrame||this.firstLoad)&&this.drawImage(this.currentFrame),this.firstLoad=!1}}]),e}();window.requestAnimationFrame||(window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)}}()),"function"==typeof define&&define.amd?define("CanvasSequence",CanvasSequence):"undefined"!=typeof module&&module.exports?module.exports=CanvasSequence:window.CanvasSequence=CanvasSequence;
//# sourceMappingURL=data:application/json;base64,